// --------------------
// common
// --------------------
.menu-bg {
  @include context-bg;
  position: fixed; top: 0; left: 100%; z-index: 200;
  width: 200%; height: 100%;
  @include transform(translateX(-$unit*6) skewX(-30deg));
  @include origin(left bottom);
  @include all(.2s);
  #menu:hover & { @include transform(translateX(-$unit*7) skewX(-30deg)); }
}

.menu-exit {
  @extend %noselect, %antialiased;
  position: fixed; top: 0; left: 0; z-index: 290; cursor: pointer;
  width: $unit*4; height: $unit*6;
  @include transform(translateX(-100%));
  @include all();
  &:before {
    content: '';
    display: block; width: 100%; height: 100%;
    background: $white;
    @include transform(skewX(-30deg));
    @include origin(left top);
  }
  &:after {
    @extend %larger, %xbold;
    content: '×'; color: $black;
    position: absolute; top: $unit/2; left: $unit*3/2; z-index: 10;
  }
}



// --------------------
// zone
// --------------------
.menu-count {
  @extend %xbold, %xlarge, %noselect, %antialiased;
  position: fixed; bottom: 0; right: 0; z-index: 210;
  width: $unit*4; height: $unit*4;
  cursor: pointer;
  @include all();
  &:before, &:after { @extend %txt-center; position: absolute; top: 0; right: 0; bottom: 0; left: 0; line-height: $unit*4; color: rgba($white, .8); }
  &:before { content: attr(data-count); @include all(); }
  &:after { content: '☰'; opacity: 0; @include all(); }
  &:hover { &:before { opacity: 0; } &:after { opacity: 1; }}
}



// --------------------
// content
// --------------------
.menu-wrap {
  position: fixed; top: 0; left: 0; overflow: hidden; z-index: -20;
  width: 100%; min-width: 1000px; height: 100%;
}
.menu-layout {
  @extend %relative, %antialiased;
  width: 100%; min-width: 1000px; height: 100%;
  @include transform(translateY(-100%));
  @include all();
}



// --------------------
// timeline
// --------------------
$tlw: $unit*10;
.tl {
  position: absolute; top: 0; right: 0; width: 50%; height: 100%;
  &:after {
    content: ''; position: absolute; top: 0; right: $tlw; bottom: 0;
    width: $unit/8; margin-right: -$unit/16;
    background: rgba($grey, .2);
  }
}
.tl-wrap {
  position: absolute; top: 0; right: 0;
  overflow: auto; -webkit-overflow-scrolling: touch;
  width: 100%; height: 100%; padding: $unit*2 0 $unit*3/2;
}
.tl-item {
  @extend %relative; z-index: 10;
  clear: right; float: right; display: table; table-layout: fixed;
  margin-bottom: $unit/2; color: $grey;
  &:after {
    content: ''; position: absolute; top: $unit/4; right: $tlw;
    width: $unit/4; height: $unit/4; margin-right: calc(#{-$unit/8} - 2px);
    border-radius: 50%;
    background: $grey; border: 2px solid $dark;
  }
}
label.tl-item {
  cursor: pointer;
  .tl-item-title { text-decoration: underline; }
}
.tl-unlocked {
  color: $white;
  &.tl-aucun:after { background: $aucun; }
  &.tl-ideaux:after { background: $ideaux; }
  &.tl-hermione:after { background: $hermione; }
  &.tl-actuel:after { background: $actuel; }
  &.tl-guerre:after { background: $guerre; }
  &.tl-relations:after { background: $relations; }
  &:after { width: $unit/3; height: $unit/3; margin-right: calc(#{-$unit/6} - 2px); margin-top: $unit/8-$unit/6; }
}
.tl-repere {
  color: $light;
  &:after { border-radius: 0; background: $light; }
  .tl-item-title { @extend %italic; }
}
.tl-item-title {
  @extend %txt-right;
  display: table-cell; vertical-align: top;
  max-width: 30em; padding: 0 $unit;
}
.tl-item-date {
  @extend %small, %xbold, %uppercase;
  display: table-cell; vertical-align: top;
  width: $tlw; padding: 0 $unit;
}
.tl-item-date-hide { visibility: hidden; }



// --------------------
// info
// --------------------
.info {
  position: absolute; bottom: 0; left: 0; overflow: hidden;
  width: 50%; padding: 0 $unit*2;
}
.stats { margin-bottom: $unit/2; }
.stats-numbers-wrap { @extend %txt-center; margin-bottom: $unit*2; }
.stats-numbers-item { display: inline-block; vertical-align: top; width: $unit*6; }
.stats-numbers-value { @extend %xlarge, %xbold; display: block; color: $white; line-height: $unit*2; }
.stats-numbers-label { @extend %small, %uppercase, %bold; display: block; color: $light; }
.stats-contexts { @extend %clearfix; margin-bottom: $unit*1/2; }
.stats-context {
  @extend %relative; overflow: hidden;
  float: left; width: calc(50% - #{$unit/2}); height: $unit*1.5; margin-bottom: $unit/2;
  background: $darker; line-height: $unit*1.5;
  &:nth-child(2n+1) { margin-right: $unit; }
  &:after { @extend %bold, %small; content: attr(data-value); position: absolute; right: $unit/2; top: 0; color: $white; }
}
.stats-context-progress {
  box-sizing: content-box; position: absolute; top: 0; bottom: 0; left: -$unit; padding: 0 $unit/2;
  @include context-bg('stats-context-');
  @include transform(skew(-30deg));
  @include origin(left bottom);
}
.stats-context-label { @extend %small; position: absolute; top: 0; left: $unit/2; color: $white; }

// .skip {}
.skip-btn {
  @extend %small, %italic;
  display: block; margin-bottom: $unit; padding: $unit/4 $unit/2;
  border: 1px solid $darker; color: $white; cursor: pointer;
  input { margin-right: $unit/4; }
}

// .credits { }
.credits-app { @extend %app; margin-bottom: $unit; border-radius: 4px; }
.credits-app-img { @extend %app-img; }
.credits-app-text { @extend %app-text; }
.credits-copyright {
  @extend %small;
  border-top: 1px solid rgba($black, .1); padding: $unit/2 0; color: $grey;
  a { @include all(); color: $light; text-decoration: underline; &:hover { color: $white; text-decoration: none; }}
}



// --------------------
// menu open
// --------------------
#menu-token:checked ~ #menu {
  .menu-bg {
    @include transform(translateX(-75%) skewX(-30deg)); @include all();
    #page-token:not(:checked) + & { background: $dark; }
    #page-token:checked + & { background: $white; }
  }
  #page-token:not(:checked) + & {
    .menu-exit {
      @include transform(translateX(-$unit)); @include all(.5s);
      &:hover { @include transform(translateX(-$unit/2)); @include all(); }
    }
    .menu-count, .menu-count { opacity: 0; }
    .menu-wrap { z-index: 220; }
    .menu-layout { @include transform(none); @include all(.2s); }
  }
}
